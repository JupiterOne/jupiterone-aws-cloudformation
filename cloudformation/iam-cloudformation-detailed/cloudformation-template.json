{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CloudFormation Template for JupiterOne AWS Integration IAM",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "JupiterOne Authentication Parameters"
          },
          "Parameters": [
            "JupiterOneAwsAccountId",
            "JupiterOneExternalId"
          ]
        }
      ],
      "ParameterLabels": {
        "JupiterOneAwsAccountId": {
          "default": "What is the JupiterOne AWS account Id?"
        },
        "JupiterOneExternalId": {
          "default": "What is the JupiterOne external Id you were provided?"
        }
      }
    }
  },
  "Parameters": {
    "JupiterOneAwsAccountId": {
      "Description": "The JupiterOne AWS account Id",
      "Type": "String",
      "Default": "612791702201"
    },
    "JupiterOneExternalId": {
      "Description": "The JupiterOne external Id",
      "Type": "String"
    }
  },
  "Resources": {
    "JupiterOneSecurityAuditPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": "JupiterOneSecurityAudit",
        "Description": "JupiterOne SecurityAudit policy",
        "Path": "/",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Resource": [
                "arn:aws:apigateway:*::/restapis",
                "arn:aws:apigateway:*::/restapis/*/authorizers",
                "arn:aws:apigateway:*::/restapis/*/authorizers/*",
                "arn:aws:apigateway:*::/restapis/*/resources",
                "arn:aws:apigateway:*::/restapis/*/resources/*",
                "arn:aws:apigateway:*::/domainnames",
                "arn:aws:apigateway:*::/apis",
                "arn:aws:apigateway:*::/apis/*/integrations",
                "arn:aws:apigateway:*::/apis/*/authorizers",
                "arn:aws:apigateway:*::/apis/*/routes"
              ],
              "Action": "apigateway:GET"
            },
            {
              "Effect": "Allow",
              "Resource": "*",
              "Action": [
                "access-analyzer:ListAnalyzers",
                "access-analyzer:ListAnalyzers",
                "access-analyzer:ListFindings",
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:ListTagsForCertificate",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribePolicies",
                "backup:GetBackupVaultAccessPolicy",
                "backup:ListBackupVaults",
                "batch:DescribeComputeEnvironments",
                "batch:DescribeJobDefinitions",
                "batch:DescribeJobQueues",
                "batch:ListJobs",
                "cloudformation:DescribeStacks",
                "cloudfront:ListDistributions",
                "cloudfront:ListTagsForResource",
                "cloudhsm:DescribeBackups",
                "cloudhsm:DescribeClusters",
                "cloudhsm:ListTags",
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetEventSelectors",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:GetMetricData",
                "cloudwatch:ListTagsForResource",
                "codecommit:GetRepository",
                "codecommit:ListRepositories",
                "codecommit:ListTagsForResource",
                "codepipeline:ListPipelines",
                "config:DescribeComplianceByConfigRule",
                "config:DescribeConfigRules",
                "config:GetComplianceDetailsByConfigRule",
                "directconnect:DescribeConnections",
                "directconnect:DescribeDirectConnectGateways",
                "directconnect:DescribeLags",
                "directconnect:DescribeVirtualInterfaces",
                "dynamodb:DescribeContinuousBackups",
                "dynamodb:DescribeTable",
                "dynamodb:ListBackups",
                "dynamodb:ListTables",
                "dynamodb:ListTagsOfResource",
                "ec2:DescribeAddresses",
                "ec2:DescribeCustomerGateways",
                "ec2:DescribeFlowLogs",
                "ec2:DescribeImages",
                "ec2:DescribeInstanceAttribute",
                "ec2:DescribeInstances",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeKeyPairs",
                "ec2:DescribeLaunchTemplates",
                "ec2:DescribeNatGateways",
                "ec2:DescribeNetworkAcls",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeRegions",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSnapshotAttribute",
                "ec2:DescribeSnapshots",
                "ec2:DescribeSubnets",
                "ec2:DescribeVolumes",
                "ec2:DescribeVpcEndpoints",
                "ec2:DescribeVpcPeeringConnections",
                "ec2:DescribeVpcs",
                "ec2:DescribeVpnConnections",
                "ec2:DescribeVpnGateways",
                "ec2:GetEbsDefaultKmsKeyId",
                "ec2:GetEbsEncryptionByDefault",
                "ecr:DescribeImages",
                "ecr:DescribeImageScanFindings",
                "ecr:DescribeRepositories",
                "ecr:GetLifecyclePolicy",
                "ecr:GetRepositoryPolicy",
                "ecr:ListTagsForResource",
                "ecs:DescribeClusters",
                "ecs:DescribeContainerInstances",
                "ecs:DescribeServices",
                "ecs:DescribeTaskDefinition",
                "ecs:DescribeTasks",
                "ecs:ListClusters",
                "ecs:ListContainerInstances",
                "ecs:ListServices",
                "ecs:ListTaskDefinitionFamilies",
                "ecs:ListTasks",
                "eks:DescribeCluster",
                "eks:DescribeNodegroup",
                "eks:ListClusters",
                "eks:ListNodegroups",
                "elasticache:DescribeCacheClusters",
                "elasticache:DescribeReplicationGroups",
                "elasticache:DescribeSnapshots",
                "elasticache:ListTagsForResource",
                "elasticfilesystem:DescribeFileSystemPolicy",
                "elasticfilesystem:DescribeFileSystems",
                "elasticfilesystem:DescribeMountTargets",
                "elasticfilesystem:DescribeMountTargetSecurityGroups",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetHealth",
                "es:DescribeElasticsearchDomains",
                "es:ListDomainNames",
                "es:ListTags",
                "events:ListRules",
                "events:ListTagsForResource",
                "events:ListTargetsByRule",
                "firehose:DescribeDeliveryStream",
                "firehose:ListDeliveryStreams",
                "firehose:ListTagsForDeliveryStream",
                "fms:ListAppsLists",
                "fms:ListPolicies",
                "fms:ListProtocolsLists",
                "fms:ListResourceSetResources",
                "fms:ListResourceSets",
                "fms:ListTagsForResource",
                "glue:GetDatabases",
                "glue:GetDataCatalogEncryptionSettings",
                "glue:GetJob",
                "glue:GetResourcePolicy",
                "glue:GetSecurityConfigurations",
                "glue:GetTags",
                "glue:ListJobs",
                "guardduty:GetDetector",
                "guardduty:GetFindings",
                "guardduty:ListDetectors",
                "guardduty:ListFindings",
                "iam:GenerateCredentialReport",
                "iam:GetAccessKeyLastUsed",
                "iam:GetAccountPasswordPolicy",
                "iam:GetAccountSummary",
                "iam:GetCredentialReport",
                "iam:GetGroup",
                "iam:GetGroupPolicy",
                "iam:GetOpenIDConnectProvider",
                "iam:GetPolicyVersion",
                "iam:GetRole",
                "iam:GetRolePolicy",
                "iam:GetSAMLProvider",
                "iam:GetUser",
                "iam:GetUserPolicy",
                "iam:ListAccessKeys",
                "iam:ListAccountAliases",
                "iam:ListEntitiesForPolicy",
                "iam:ListGroupPolicies",
                "iam:ListGroups",
                "iam:ListInstanceProfiles",
                "iam:ListMFADevices",
                "iam:ListOpenIDConnectProviders",
                "iam:ListOpenIDConnectProviderTags",
                "iam:ListPolicies",
                "iam:ListRolePolicies",
                "iam:ListRoles",
                "iam:ListRoleTags",
                "iam:ListSAMLProviders",
                "iam:ListUserPolicies",
                "iam:ListUsers",
                "iam:ListUserTags",
                "inspector:DescribeAssessmentRuns",
                "inspector:DescribeFindings",
                "inspector:DescribeRulesPackages",
                "inspector:ListAssessmentRuns",
                "inspector:ListFindings",
                "inspector2:ListCoverage",
                "inspector2:ListFindings",
                "kinesis:DescribeStreamSummary",
                "kinesis:ListStreamConsumers",
                "kinesis:ListStreams",
                "kinesis:ListTagsForStream",
                "kms:DescribeKey",
                "kms:GetKeyPolicy",
                "kms:GetKeyRotationStatus",
                "kms:ListAliases",
                "kms:ListKeys",
                "lambda:GetFunction",
                "lambda:GetPolicy",
                "lambda:ListFunctions",
                "lambda:ListTags",
                "lex:DescribeResourcePolicy",
                "lex:ListBotAliases",
                "lex:ListBots",
                "logs:DescribeLogGroups",
                "logs:ListTagsLogGroup",
                "logs:DescribeDestinations",
                "macie2:GetFindings",
                "macie2:ListFindings",
                "network-firewall:DescribeFirewall",
                "network-firewall:DescribeFirewallPolicy",
                "network-firewall:DescribeRuleGroup",
                "network-firewall:ListFirewallPolicies",
                "network-firewall:ListFirewalls",
                "network-firewall:ListRuleGroups",
                "organizations:DescribeOrganization",
                "organizations:DescribeOrganizationalUnit",
                "organizations:ListAccounts",
                "organizations:ListChildren",
                "organizations:ListRoots",
                "organizations:ListTagsForResource",
                "rds:DescribeDBClusterParameterGroups"
              ]
            }
          ]
        }
      }
    },
    "JupiterOneRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/SecurityAudit",
          {
            "Ref": "JupiterOneSecurityAuditPolicy"
          },
          {
            "Ref": "JupiterOneSecurityAuditPolicy2"
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:iam::",
                      {
                        "Ref": "JupiterOneAwsAccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": {
                    "Ref": "JupiterOneExternalId"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "JupiterOneSecurityAuditPolicy2": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": "JupiterOneSecurityAudit2",
        "Description": "JupiterOne SecurityAudit policy",
        "Path": "/",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Resource": "*",
              "Action": [
                "rds:DescribeDBClusterParameters",
                "rds:DescribeDBClusters",
                "rds:DescribeDBClusterSnapshots",
                "rds:DescribeDBInstances",
                "rds:DescribeDBParameterGroups",
                "rds:DescribeDBParameters",
                "rds:DescribeDBSnapshots",
                "redshift-serverless:ListEndpointAccess",
                "redshift-serverless:ListNamespaces",
                "redshift-serverless:ListRecoveryPoints",
                "redshift-serverless:ListSnapshots",
                "redshift-serverless:ListTagsForResource",
                "redshift-serverless:ListUsageLimits",
                "redshift-serverless:ListWorkgroups",
                "redshift:DescribeClusterParameterGroups",
                "redshift:DescribeClusterParameters",
                "redshift:DescribeClusters",
                "redshift:DescribeLoggingStatus",
                "route53:ListHostedZones",
                "route53:ListResourceRecordSets",
                "route53domains:GetDomainDetail",
                "route53domains:ListDomains",
                "route53domains:ListTagsForDomain",
                "s3:GetAccountPublicAccessBlock",
                "s3:GetBucketAcl",
                "s3:GetBucketLocation",
                "s3:GetBucketLogging",
                "s3:GetBucketNotification",
                "s3:GetBucketObjectLockConfiguration",
                "s3:GetBucketOwnershipControls",
                "s3:GetBucketPolicy",
                "s3:GetBucketPolicyStatus",
                "s3:GetBucketPublicAccessBlock",
                "s3:GetBucketTagging",
                "s3:GetBucketVersioning",
                "s3:GetEncryptionConfiguration",
                "s3:GetInventoryConfiguration",
                "s3:GetLifecycleConfiguration",
                "s3:GetReplicationConfiguration",
                "s3:ListAllMyBuckets",
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetResourcePolicy",
                "secretsmanager:ListSecrets",
                "ses:GetIdentityPolicies",
                "ses:GetIdentityVerificationAttributes",
                "ses:ListIdentities",
                "ses:ListIdentityPolicies",
                "shield:DescribeSubscription",
                "shield:GetSubscriptionState",
                "shield:ListProtectionGroups",
                "shield:ListProtections",
                "shield:ListResourcesInProtectionGroup",
                "shield:ListTagsForResource",
                "sns:GetSubscriptionAttributes",
                "sns:GetTopicAttributes",
                "sns:ListSubscriptions",
                "sns:ListTagsForResource",
                "sns:ListTopics",
                "sqs:GetQueueAttributes",
                "sqs:ListQueues",
                "sqs:ListQueueTags",
                "ssm:DescribeInstanceInformation",
                "ssm:DescribeInstancePatchStates",
                "ssm:DescribeParameters",
                "ssm:DescribePatchBaselines",
                "ssm:DescribePatchGroups",
                "ssm:DescribePatchGroupState",
                "ssm:GetDocument",
                "ssm:ListDocuments",
                "ssm:ListInventoryEntries",
                "tag:GetResources",
                "transfer:ListServers",
                "transfer:ListTagsForResource",
                "transfer:ListUsers",
                "waf:GetWebACL",
                "waf:ListWebACLs",
                "wafv2:GetWebACL",
                "wafv2:ListResourcesForWebACL",
                "wafv2:ListWebACLs",
                "workspaces:DescribeWorkspaceBundles",
                "workspaces:DescribeWorkspaces"
              ]
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "RoleARN": {
      "Description": "ARN of the JupiterOne role",
      "Value": {
        "Fn::GetAtt": [
          "JupiterOneRole",
          "Arn"
        ]
      }
    }
  }
}